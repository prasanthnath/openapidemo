/*
 * OpenAPI Sample App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xyz.openapi.thinclient.api;

import com.xyz.openapi.thinclient.model.Department;
import com.xyz.openapi.thinclient.model.EmployeeList;
import com.xyz.openapi.thinclient.model.ErrorResponse;
import com.xyz.openapi.thinclient.model.OneOfContractEmployeeRegularEmployee;
import com.xyz.openapi.thinclient.model.UNKNOWN_BASE_TYPE;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationControlsApi
 */
@Ignore
public class OrganizationControlsApiTest {

    private final OrganizationControlsApi api = new OrganizationControlsApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDepartmentTest() {
        Department department = null;
        String response = api.createDepartment(department);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEmployeeTest() {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        String response = api.createEmployee(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllDepartmentsTest() {
        List<Department> response = api.getAllDepartments();

        // TODO: test validations
    }
    
    /**
     * If departmentId is not passed, get all employees. Otherwise get employees from specific department.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllEmployeesTest() {
        String deptId = null;
        EmployeeList response = api.getAllEmployees(deptId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDepartmentTest() {
        String id = null;
        Department response = api.getDepartment(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmployeeTest() {
        String id = null;
        OneOfContractEmployeeRegularEmployee response = api.getEmployee(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateEmployeeTest() {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        String response = api.updateEmployee(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
}
